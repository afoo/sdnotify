plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}

group 'de.afoo'
version '1.0-beta4'

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                licenses {
                    license {
                        name = 'MIT No Attribution License'
                        url = 'https://opensource.org/licenses/MIT-0'
                    }
                }
                developers {
                    developer {
                        id = 'afoo'
                        name = 'Jan HÃ¼lsbergen'
                        email = 'jan@huelsbergen.de'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://git.afoo.at/api/packages/jan/maven'
            credentials(HttpHeaderCredentials) {
                name = "Authorization"
                value = "token " + System.getenv("MAVEN_REPO_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // for UNIX DGRAM Sockets
    implementation 'com.kohlschutter.junixsocket:junixsocket-core:2.5.1'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.3'

    // Jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    // system-stubs
    //testImplementation 'org.mockito:mockito-core:4.8.0'
    testImplementation 'org.mockito:mockito-inline:4.8.0'
    testImplementation 'uk.org.webcompere:system-stubs-core:2.0.1'
    testImplementation 'uk.org.webcompere:system-stubs-jupiter:2.0.1'

    // UNIX DGRAM Server for tests
    testImplementation 'com.kohlschutter.junixsocket:junixsocket-server:2.5.1'

    // For FileUtils.touch
    testImplementation 'org.apache.commons:commons-io:1.3.2'
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}